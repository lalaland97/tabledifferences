#!/bin/bash

# Function to increment date by a given number of days
increment_date() {
    date -d "$1 +$2 days" +"%Y-%m-%d"
}

# Validate logon file and paths
for path in "$LOGON_FILE" "$LOG_FILE_PATH" "$SQL_FILE_PATH"; do
    if [ ! -e "$path" ]; then
        echo "Error: Path does not exist: $path" >&2
        exit 1
    fi
done

### **Daily Refresh Logic (YYYY-MM-DD format)** ###
start_date=$(date -d "$(date +%Y-%m-01) -1 month" +%Y-%m-%d)
end_date=$(date -d "$(date +%Y-%m-01) -1 day" +%Y-%m-%d)
current_date=$start_date

while [ "$(date -d "$current_date" +%Y%m%d)" -le "$(date -d "$end_date" +%Y%m%d)" ]; do
    START_TIME=$(date +%Y%m%d%H%M%S)
    LOG_FILE="$LOG_FILE_PATH/${SCRIPT_NAME}_${START_TIME}.log"

    # Refresh end date
    REFRESH_END_DATE=$(increment_date "$current_date" "$increment")

    if [ "$(date -d "$REFRESH_END_DATE" +%Y%m%d)" -gt "$(date -d "$end_date" +%Y%m%d)" ]; then
        REFRESH_END_DATE=$end_date
    fi

    # Redirect log output
    exec > >(tee -a "$LOG_FILE") 2>&1

    # Run SQL scripts for daily refresh using BTEQ
    for sql_file in example_daily.sql; do
        if [ ! -f "$SQL_FILE_PATH/$sql_file" ]; then
            echo "SQL file not found: $SQL_FILE_PATH/$sql_file" >&2
            exit 1
        fi

        # Run the SQL script using BTEQ for Teradata
        bteq < "$SQL_FILE_PATH/$sql_file" >> "$LOG_FILE" 2>&1

        if [ $? -ne 0 ]; then
            echo "SQL execution failed: $sql_file" >&2
            mailx -s "[ERROR] FAILURE - $SCRIPT_NAME $(date)" "$EMAIL_LIST" < "$LOG_FILE"
            exit 1
        fi
    done

    current_date=$(increment_date "$REFRESH_END_DATE" 1)
done

chmod 640 "$LOG_FILE"
echo "$SCRIPT_NAME has completed successfully." | mailx -s "[SUCCESS] $SCRIPT_NAME $(date)" "$EMAIL_LIST"

### **Monthly Refresh Logic (mm-yyyy format)** ###
monthly_refresh_date=$(date -d "$(date +%Y-%m-01) -1 month" +%Y-%m-%d)
monthly_refresh_end_date=$(date -d "$(date +%Y-%m-01) -1 day" +%Y-%m-%d)
MMYYYY=$(date -d "$monthly_refresh_date" +%m-%Y)

MONTHLY_LOG_FILE="$LOG_FILE_PATH/${SCRIPT_NAME}_Monthly_${MMYYYY}.log"
exec > >(tee -a "$MONTHLY_LOG_FILE") 2>&1

# Run SQL scripts for monthly refresh using BTEQ
for sql_file in example_monthly.sql; do
    if [ ! -f "$SQL_FILE_PATH/$sql_file" ]; then
        echo "SQL file not found: $SQL_FILE_PATH/$sql_file" >&2
        exit 1
    fi

    # Run the SQL script using BTEQ for Teradata
    bteq < "$SQL_FILE_PATH/$sql_file" >> "$MONTHLY_LOG_FILE" 2>&1

    if [ $? -ne 0 ]; then
        echo "SQL execution failed: $sql_file" >&2
        mailx -s "[ERROR] FAILURE - $SCRIPT_NAME (Monthly) $(date)" "$EMAIL_LIST" < "$MONTHLY_LOG_FILE"
        exit 1
    fi
done

chmod 640 "$MONTHLY_LOG_FILE"
echo "$SCRIPT_NAME (Monthly) has completed successfully." | mailx -s "[SUCCESS] $SCRIPT_NAME (Monthly) $(date)" "$EMAIL_LIST"
