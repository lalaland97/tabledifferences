import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load your CSV file
file_path = 'path/to/your/file.csv'  # Replace with the path to your CSV file
data = pd.read_csv(file_path)

# Convert 'date_time' to datetime
data['date_time'] = pd.to_datetime(data['date_time'])

# Separate the data into 'joined' and 'left' actions
joined_data = data[data['action'] == 'joined']
left_data = data[data['action'] == 'left']

# Define 10-minute intervals
time_frequency = '10T'
time_range = pd.date_range(start=joined_data['date_time'].min(), end=left_data['date_time'].max(), freq=time_frequency)

# Create a DataFrame for time intervals
time_intervals = pd.DataFrame({'interval_start': time_range})
time_intervals['interval_end'] = time_intervals['interval_start'] + pd.Timedelta(minutes=10)

# Function to count participants in each interval
def count_participants_in_interval(start_time, end_time):
    # Get participants who joined before the end of the interval
    joined_in_interval = joined_data[(joined_data['date_time'] <= end_time)]

    # Get participants who left before the start of the interval
    left_before_interval = left_data[left_data['date_time'] < start_time]

    # Exclude those who have left the interval
    current_participants = joined_in_interval[~joined_in_interval['session_id'].isin(left_before_interval['session_id'])]

    return current_participants['session_id'].nunique()

# Apply the function to each interval
time_intervals['participants'] = time_intervals.apply(lambda row: count_participants_in_interval(row['interval_start'], row['interval_end']), axis=1)

# Sort intervals by the number of participants to find the peak times
peak_times = time_intervals.sort_values(by='participants', ascending=False)

# Print the top 10 peak times
print(peak_times.head(10))

# Save the results to a CSV file
peak_times.to_csv('busiest_times_10min_intervals.csv', index=False)

# Plot the data
plt.figure(figsize=(14, 7))
sns.lineplot(data=time_intervals, x='interval_start', y='participants', marker='o')

# Customize the plot
plt.title('Number of Participants During Call Over Time')
plt.xlabel('Time Interval')
plt.ylabel('Number of Participants')
plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
plt.grid(True)

# Save the plot
plt.savefig('participants_over_time.png')

# Show the plot
plt.show()
