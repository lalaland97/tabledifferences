import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load your CSV file
file_path = 'path/to/your/file.csv'  # Replace with the path to your CSV file
data = pd.read_csv(file_path)

# Convert 'date_time' to datetime
data['date_time'] = pd.to_datetime(data['date_time'])

# Separate the data into 'joined' and 'left' actions
joined_data = data[data['action'] == 'joined']
left_data = data[data['action'] == 'left']

# Define 10-minute intervals
time_frequency = '10T'
time_range = pd.date_range(start=joined_data['date_time'].min(), end=left_data['date_time'].max(), freq=time_frequency)

# Create a DataFrame for time intervals
time_intervals = pd.DataFrame({'interval_start': time_range})
time_intervals['interval_end'] = time_intervals['interval_start'] + pd.Timedelta(minutes=10)

# Function to count unique participants currently on the call in each interval
def count_unique_participants_on_call(start_time, end_time):
    # Participants who joined before the end of the interval
    joined_in_interval = joined_data[joined_data['date_time'] <= end_time]

    # Participants who left before the start of the interval
    left_before_interval = left_data[left_data['date_time'] < start_time]

    # Participants who are currently on the call
    on_call = joined_in_interval[~joined_in_interval['session_id'].isin(left_before_interval['session_id'])]

    # Count unique participants
    return on_call['session_id'].nunique()

# Apply the function to each interval
time_intervals['participants_on_call'] = time_intervals.apply(lambda row: count_unique_participants_on_call(row['interval_start'], row['interval_end']), axis=1)

# Print the number of participants on call for each time slot
for index, row in time_intervals.iterrows():
    print(f"Interval: {row['interval_start']} to {row['interval_end']} - Participants On Call: {row['participants_on_call']}")

# Plot the data
plt.figure(figsize=(14, 7))
sns.lineplot(data=time_intervals, x='interval_start', y='participants_on_call', marker='o')

# Customize the plot
plt.title('Number of Unique Participants On Call Over Time')
plt.xlabel('Time Interval')
plt.ylabel('Number of Unique Participants On Call')
plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
plt.grid(True)

# Save the plot
plt.savefig('participants_on_call_over_time.png')

# Show the plot
plt.show()
